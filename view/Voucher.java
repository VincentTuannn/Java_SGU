/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import bus.CategoryBUS;
import bus.ProductBUS;
import bus.VoucherBUS;
import dao.voucherDAO;
import dto.CategoryDTO;
import dto.ProductDTO;
import dto.VoucherDTO;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lap4all
 */
public class Voucher extends javax.swing.JPanel {

    /**
     * Creates new form Voucher
     */
    ProductBUS productBUS = new ProductBUS();
    ArrayList<ProductDTO> listProduct = productBUS.getALL();
    VoucherBUS VoucherBUS = new VoucherBUS();
    ArrayList<VoucherDTO> listVoucher = VoucherBUS.getALL();

    public Voucher() {
        initComponents();
        loadDataTable(listVoucher);
        loadform(listProduct);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField7 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1000, 800));

        jLabel1.setText("DANH SÁCH KHUYẾN MÃI");
        jLabel1.setToolTipText("");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID KHUYẾN MÃI", "TÊN", "GIÁ TRỊ", "NGÀY BẮT ĐẦU", "NGÀY KẾT THÚC", "TRẠNG THÁI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("THÔNG TIN CHI TIẾT");

        jButton1.setText("THÊM");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("SỬA");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("XÓA");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setText("KHÔI PHỤC");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton5.setText("LÀM MỚI");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel3.setText("ID KHUYẾN MÃI");

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel4.setText("TÊN");

        jLabel5.setText("GIÁ TRỊ");

        jLabel6.setText("NGÀY BẮT ĐẦU");

        jLabel7.setText("NGÀY KẾT THÚC");

        jLabel8.setText("MÔ TẢ");

        jLabel9.setText("TRẠNG THÁI");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel10.setText("DANH SÁCH SẢN PHẨM ÁP DỤNG");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MÃ SẢN PHẨM", "TÊN SẢN PHẨM", "ID KHUYẾN MÃI", "TRẠNG THÁI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jButton6.setText("XUẤT EXCEL");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("NHẬP EXCEL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(259, 259, 259)
                            .addComponent(jLabel10))
                        .addComponent(jScrollPane2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3)
                            .addComponent(jTextField4)
                            .addComponent(jTextField5)
                            .addComponent(jTextField6)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(212, 212, 212))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jButton7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        displaySelectedVoucher();
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        resetForm();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        addVoucher();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        xoavoucher();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        khoiphucvoucher();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        updatevoucher();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables

public boolean updatevoucher() {
    try {
        // Thực hiện kiểm tra hợp lệ
        if (!performValidation()) {
            return false;
        }

        // Lấy danh sách tất cả các voucher
        ArrayList<VoucherDTO> listVoucher = VoucherBUS.getALL();

        // Lấy thông tin từ các JTextField
        String tenVoucherMoi = jTextField2.getText(); // Lấy tên mới từ JTextField2
        double giaTri = Double.parseDouble(jTextField3.getText()); // Giá trị float
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date ngayBatDau = null;
        Date ngayKetThuc = null;
        java.sql.Date sqlNgayBatDau = null;
        java.sql.Date sqlNgayKetThuc = null;
        int mavoucher = Integer.parseInt(jTextField1.getText());
        try {
            ngayBatDau = dateFormat.parse(jTextField4.getText());
            ngayKetThuc = dateFormat.parse(jTextField5.getText());
            sqlNgayBatDau = new java.sql.Date(ngayBatDau.getTime());
            sqlNgayKetThuc = new java.sql.Date(ngayKetThuc.getTime());
        } catch (ParseException ex) {
            return false; // Trả về false nếu ngày không hợp lệ
        }

        String moTa = jTextField6.getText(); // Mô tả
        if (moTa.isEmpty()) {
            moTa = " "; // Nếu mô tả rỗng, gán là một khoảng trắng
        }
        int trangThai = 1; // Trạng thái mặc định là 1

        // Tìm voucher trong danh sách và lấy tên cũ của voucher
        String tenVoucherCu = null;
        for (VoucherDTO voucher : listVoucher) {
            if (voucher.getIDKHUYENMAI() == mavoucher) {
                tenVoucherCu = voucher.getTEN();
                break;
            }
        }

        // Kiểm tra tên mới có trùng với tên của các voucher khác không
        boolean isNewNameDuplicate = false;
        for (VoucherDTO voucher : listVoucher) {
            if (voucher.getIDKHUYENMAI() != mavoucher && voucher.getTEN().equals(tenVoucherMoi)) {
                isNewNameDuplicate = true;
                break;
            }
        }

        if (isNewNameDuplicate) {
            JOptionPane.showMessageDialog(this, "Tên mới trùng với tên của voucher khác, vui lòng chọn tên khác !");
            return false;
        } else {
            // Tạo đối tượng VoucherDTO mới
            VoucherDTO newVoucher = new VoucherDTO(mavoucher, tenVoucherMoi, giaTri, sqlNgayBatDau, sqlNgayKetThuc, moTa, trangThai);

            // Thực hiện cập nhật voucher mới vào cơ sở dữ liệu
            boolean isSuccess = VoucherBUS.update(newVoucher);
            if (isSuccess) {
                JOptionPane.showMessageDialog(this, "Cập nhật khuyến mãi thành công !");
                resetForm();
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật khuyến mãi thất bại !");
            }
            return isSuccess;
        }
    } catch (Exception ex) {
        Logger.getLogger(Voucher.class.getName()).log(Level.SEVERE, null, ex);
        return false;
    }
}


    public boolean khoiphucvoucher() {
        int index = getRowSelected();
        if (index != -1) {
            boolean a = VoucherBUS.restore(listVoucher.get(getRowSelected()));
            resetForm();
            if (a) {
                JOptionPane.showMessageDialog(this, "Khôi phục khuyến mãi thành công !");
            } else {
                JOptionPane.showMessageDialog(this, "Khôi phục  khuyến mãi thất bại !");
            }
            return a;
        }
        return false;
    }

// Trong xoavoucher()
    public boolean xoavoucher() {
        int index = getRowSelected();
        if (index != -1) {
            boolean a = VoucherBUS.delete(listVoucher.get(getRowSelected()));
            resetForm();
            if (a) {
                JOptionPane.showMessageDialog(this, "Xóa khuyến mãi thành công !");
            } else {
                JOptionPane.showMessageDialog(this, "Xóa khuyến mãi thất bại !");
            }
            return a;
        }
        return false;
    }

    public boolean addVoucher() {
        try {
            // Thực hiện kiểm tra hợp lệ
            if (!performValidation()) {
                return false;
            }

            // Lấy danh sách tất cả các voucher
            ArrayList<VoucherDTO> listVoucher = VoucherBUS.getALL();

            // Kiểm tra xem tên voucher đã tồn tại chưa
            String tenVoucher = jTextField2.getText(); // Lấy tên từ JTextField2
            for (VoucherDTO voucher : listVoucher) {
                if (voucher.getTEN().equals(tenVoucher)) {
                    return false; // Nếu tên đã tồn tại, trả về false
                }
            }

            // Lấy thông tin từ các JTextField
            int idKhuyenMai = voucherDAO.getInstance().getAutoIncrement(); // Lấy ID tự động tăng
            String ten = jTextField2.getText();
            double giaTri = Double.parseDouble(jTextField3.getText()); // Giá trị float
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date ngayBatDau = null;
            Date ngayKetThuc = null;
            java.sql.Date sqlNgayBatDau = null;
            java.sql.Date sqlNgayKetThuc = null;
            try {
                ngayBatDau = (Date) dateFormat.parse(jTextField4.getText());
                ngayKetThuc = (Date) dateFormat.parse(jTextField5.getText());
                sqlNgayBatDau = new java.sql.Date(ngayBatDau.getTime());
                sqlNgayKetThuc = new java.sql.Date(ngayKetThuc.getTime());
            } catch (ParseException ex) {
                return false; // Trả về false nếu ngày không hợp lệ
            }
            String moTa = jTextField6.getText(); // Mô tả
            if (moTa.isEmpty()) {
                moTa = " "; // Nếu mô tả rỗng, gán là một khoảng trắng
            }
            int trangThai = 1; // Trạng thái mặc định là 1

            // Tạo đối tượng VoucherDTO mới
            VoucherDTO newVoucher = new VoucherDTO(idKhuyenMai, ten, giaTri, sqlNgayBatDau, sqlNgayKetThuc, moTa, trangThai);

            // Thêm voucher mới vào cơ sở dữ liệu
            boolean isSuccess = VoucherBUS.addVoucher(newVoucher);
            if (isSuccess) {
                JOptionPane.showMessageDialog(this, "Thêm khuyến mãi thành công !");
                resetForm();

            } else {
                JOptionPane.showMessageDialog(this, "Thêm khuyến mãi thất bại !");
            }
            return isSuccess;
        } catch (Exception ex) {
            Logger.getLogger(Voucher.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }

    public boolean performValidation() {
        // Kiểm tra JTextField2
        if (jTextField2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập thông tin vào tên.");
            return false;
        } else if (!jTextField2.getText().matches(".*[a-zA-Z].*")) {
            JOptionPane.showMessageDialog(null, "Tên phải chứa ít nhất một chữ cái.");
            return false;
        }

        // Kiểm tra JTextField3
        if (jTextField3.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập giá.");
            return false;
        } else {
            try {
                float value = Float.parseFloat(jTextField3.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Giá phải là số.");
                return false;
            }
        }

        // Kiểm tra JTextField4
        if (jTextField4.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập ngày bắt đầu.");
            return false;
        } else {
            try {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                dateFormat.setLenient(false); // Không chấp nhận ngày không hợp lệ
                Date date = dateFormat.parse(jTextField4.getText());
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(null, "Ngày bắt đầu không đúng định dạng ngày. Định dạng là : yyyy-MM-dd");
                return false;
            }
        }

        // Kiểm tra JTextField5
        if (jTextField5.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập thông tin vào ngày kết thúc.");
            return false;
        } else {
            try {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                dateFormat.setLenient(false); // Không chấp nhận ngày không hợp lệ
                Date ngayBatDau = dateFormat.parse(jTextField4.getText());
                Date ngayKetThuc = dateFormat.parse(jTextField5.getText());
                java.sql.Date sqlNgayBatDau = new java.sql.Date(ngayBatDau.getTime());
                java.sql.Date sqlNgayKetThuc = new java.sql.Date(ngayKetThuc.getTime());
                if (!ngayKetThuc.after(ngayBatDau)) {
                    JOptionPane.showMessageDialog(null, "Ngày kết thúc phải sau ngày ở bát đầu.");
                    return false;
                }
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(null, "Ngày kết thúc không đúng định dạng ngày. Định dạng là : yyyy-MM-dd");
                return false;
            }
        }

        // Nếu tất cả các trường hợp đều hợp lệ
        return true;
    }

    public void resetForm() {
        jTextField1.setText("");
        jTextField3.setText("");
        jTextField2.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        listProduct.clear();
        listProduct = productBUS.getALL();
        listVoucher = VoucherBUS.getALL();
        loadDataTable(listVoucher);
        loadform(listProduct);

    }

    public int getRowSelected() {
        int index = jTable1.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn khuyến mãi!");
        }
        return index;
    }

    private void displaySelectedVoucher() {
        int index = jTable1.getSelectedRow();
        jTextField1.setText(String.valueOf(listVoucher.get(index).getIDKHUYENMAI()));
        jTextField2.setText(listVoucher.get(index).getTEN());
        jTextField3.setText(String.valueOf(listVoucher.get(index).getGIATRI()));
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date ngayKetThuc = listVoucher.get(index).getNGAYKETTHUC();
        Date ngayBatDau = listVoucher.get(index).getNGAYBATDAU();
        String ngayKetThucString = dateFormat.format(ngayKetThuc);
        String ngayBatDauString = dateFormat.format(ngayBatDau);
        jTextField5.setText(ngayKetThucString);
        jTextField4.setText(ngayBatDauString);
        jTextField6.setText(listVoucher.get(index).getMOTA());
        int trangthai = listVoucher.get(index).getTRANGTHAI();
        if (trangthai == 1) {
            jComboBox1.setSelectedItem("Kích hoạt");
        } else {
            jComboBox1.setSelectedItem("Khóa");
        }

        // Gọi phương thức getlistproductbyMaKhuyenMai từ VoucherBus để lấy danh sách sản phẩm
        ArrayList<ProductDTO> productList = VoucherBUS.getlistproductbyMaKhuyenMai(listVoucher.get(index).getIDKHUYENMAI());

        // Cập nhật lại jTable1 với dữ liệu sản phẩm mới
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0); // Xóa tất cả các dòng hiện có trong jTable1
        for (ProductDTO p : productList) {
            String status;
            if (p.getTRANGTHAI() == 0) {
                status = "Khóa ";
            } else {
                status = "Kích hoạt";
            }
            // Thêm từng sản phẩm vào jTable1
            model.addRow(new Object[]{
                p.getIDSP(), p.getTEN(), p.getIDKHUYENMAI(), status

            });
        }
    }

    private void loadDataTable(ArrayList<VoucherDTO> result) {
        DefaultTableModel productModel = (DefaultTableModel) jTable1.getModel();
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Kích hoạt");
        jComboBox1.addItem("Khóa");

        productModel.setRowCount(0);
        for (VoucherDTO p : result) {
            String status;
            if (p.getTRANGTHAI() == 0) {
                status = "Khóa ";
            } else {
                status = "Kích hoạt";
            }
            productModel.addRow(new Object[]{
                p.getIDKHUYENMAI(), p.getTEN(), p.getGIATRI(), p.getNGAYBATDAU(), p.getNGAYKETTHUC(), status
            });
        }
    }

    private void loadform(ArrayList<ProductDTO> result) {
        DefaultTableModel productModel = (DefaultTableModel) jTable2.getModel();

        productModel.setRowCount(0);
        for (ProductDTO p : result) {
            String status;
            if (p.getTRANGTHAI() == 0) {
                status = "Khóa ";
            } else {
                status = "Kích hoạt";
            }
            productModel.addRow(new Object[]{
                p.getIDSP(), p.getTEN(), p.getIDKHUYENMAI(), status
            });
        }
    }

    public static void main(String[] args) {
        JFrame fr = new JFrame();
        Voucher pr = new Voucher();
        fr.add(pr);
        fr.setSize(1000, 800);
        fr.setVisible(true);
    }
}
